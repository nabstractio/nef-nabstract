# NABSTRACT CONFIDENTIAL
#
# Copyright 2022-2023 Nabstract Technologies Private Limited.
#
# This software and the related documents are Nabstract copyrighted materials, and your use of
# them is governed by the express license under which they were provided to you ("License").
# Unless the License provides otherwise, you may not use, modify, copy, publish, distribute,
# disclose or transmit this software or the related documents without Nabstract's prior written permission.
#
# This software and the related documents are provided as is, with no express or implied warranties,
# other than those that are expressly stated in the License.
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    #service: "{{ .Values.service.name }}"
    {{- include "nef-nabstract.labels" . | nindent 4 }}
  name: {{ include "nef-nabstract.fullname" . }}
  namespace: "{{ .Values.namespace }}"
spec:
  replicas: 2
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "nef-nabstract.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "nef-nabstract.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/" .Values.configmap.name ".yaml") . | sha256sum }}
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - nef-nabstract
            topologyKey: kubernetes.io/hostname
      imagePullSecrets:
      - name: regcred
      serviceAccountName: nef
      volumes:
        - name: shared-configs-nef
          configMap:
            name: "{{ .Values.configmap.nef }}"
        - name: shared-configs-oauth2
          configMap:
            name: "{{ .Values.configmap.oauth2 }}"
        - name: shared-certs
          configMap:
            name: "{{ .Values.configmap.certs }}"
        - name: {{ .Values.agent.configmapName }}
          configMap:
            name: {{ .Values.agent.configMap }}
        - name: certs
          secret:
            secretName: root-cert
      hostAliases:
      - ip: "3.110.132.163"
        hostnames:
        - "pcf.niotest.com"
        - "amf.niotest.com"
        - "udr.niotest.com"
        - "nrf.niotest.com"
      containers:
        - name: nef-container
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          command: ["/bin/bash", "-c", "--"]
          args: ["./entrypoint.sh"]
          terminationMessagePath: "/home/nabstract/termination-logs"
          terminationMessagePolicy: "FallbackToLogsOnError"
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "echo Hello from the NABSTRACT NEF > /home/nabstract/logs"]
            preStop:
              exec:
                command: ["sleep", "45"]
          env:
          - name: GO111MODULE
            value: "on"
          - name: OTEL_AGENT_ENDPOINT
            value: "{{ .Values.agent.receiver.opencensus.endpoint }}"
          resources:
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
          ports:
            - containerPort: 8060
              name: af
            - containerPort: 9051
              name: notification
          livenessProbe:
            tcpSocket:
              port: 8060
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            exec:
              command:
              - ls
              - /home/nabstract/logs
            initialDelaySeconds: 15
            periodSeconds: 20
          startupProbe:
            tcpSocket:
              port: 8060
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          volumeMounts:
            - name: shared-configs-nef
              mountPath: /home/nabstract/configs/nef.json
              subPath: nef.json
            - name: shared-configs-oauth2
              mountPath: /home/nabstract/configs/oauth2.json
              subPath: oauth2.json
            - name: shared-certs
              mountPath: /etc/certs
        - command:
            - "/go/bin/otelcol-linux"
            - "--config=/conf/otel-nef-agent-config.yaml"
          env:
            - name: no_proxy
              value: localhost,127.0.0.1,otel-collector.telemetry.svc
            - name: GRPC_GO_LOG_VERBOSITY_LEVEL
              value: "99"
            - name: GRPC_GO_LOG_SEVERITY_LEVEL
              value: "info"
            - name: GODEBUG
              value: "x509ignoreCN=0"
          image: {{ .Values.agent.image }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          name: {{ .Values.agent.name }}
          terminationMessagePath: "/tmp/termination-log"
          terminationMessagePolicy: "FallbackToLogsOnError"
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "echo Hello from the postStart handler > /usr/share/message"]
            preStop:
              exec:
                command: ["sleep", "45"]
          livenessProbe:
            tcpSocket:
              port: 55678
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            tcpSocket:
              port: 55678
            initialDelaySeconds: 15
            periodSeconds: 20
          startupProbe:
            tcpSocket:
              port: 55678
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          resources:
            limits:
              cpu: {{ .Values.agent.resources.limits.cpu }}
              memory: {{ .Values.agent.resources.limits.memory }}
            requests:
              cpu: {{ .Values.agent.resources.requests.cpu }}
              memory: {{ .Values.agent.resources.requests.memory }}
          ports:
            - containerPort: {{ .Values.agent.opencensusport }} #Opencensus receiver port.
          volumeMounts:
            - name: {{ .Values.agent.configmapName }}
              mountPath: "/conf"
            - name: certs
              mountPath: /root/CA
      restartPolicy: Always
